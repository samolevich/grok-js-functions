// Вложенные функции
// 200. Объявите функцию foo. Внутри неё объявите функцию bar. Обозначьте границы тела функции foo. Обозначьте границы тела функции bar.

function foo() {/* начало тела foo */
    function bar() {/* тело bar */}
/* конец тела foo */}


// 202. Объявите функцию foo. Внутри неё объявите функцию bar. Внутри bar объявите функцию baz. Обозначьте границы тела функции foo. Обозначьте границы тела функции bar. Обозначьте границы тела функции baz.

const foo = () => {/* начало тела foo */
    const bar = () => {/* начало тела bar */
        const baz = () => {/* тело baz */};
    /* конец тела bar */};
/* конец тела foo */};


// 204. Объявите функцию foo со входящим параметром a. Внутри неё объявите функцию bar со входящим параметром b. Обозначьте границы параметров функции foo. Обозначьте границы параметров функции bar.

function foo(/*начало параметров функции foo*/a/*конец параметров функции foo*/) {
    function  bar(/*начало параметров функции bar*/b/*конец параметров функции bar*/) {}
}


// 206. Объявите функцию foo со входящим параметром a. Внутри неё объявите функцию bar со входящим параметром b. Вызовите функцию bar внутри функции foo. Каков результат выполнения функции bar?

function foo(a) {
    function bar(b) {}

    bar()
} // bar не вызывается, так как не вызвана foo
// не могу понять почему. повторить


// 208. Объявите функцию foo со входящим параметром a. Внутри неё объявите функцию bar со входящим параметром b. Вызовите функцию bar внутри функции foo. Каков результат выполнения функции foo?

function foo(a) {
    function bar(b) {}
    bar()
} // foo не вызвана
// не понятно. повторить


// 210. Объявите функцию foo со входящим параметром a. Внутри неё объявите функцию bar со входящим параметром b. Вызовите функцию bar внутри функции foo. Вызовите функцию foo. Каков результат выполнения функции bar? Каков результат выполнения функции foo?

const foo = (a) => {
    const bar = (b) => {};
    bar()
}
foo()
// undefined


// 212. Объявите функцию foo со входящим параметром a. Внутри неё объявите функцию bar со входящим параметром b. Функция bar должна удваивать поданное ей на вход значение. Функция foo должна утраивать поданное ей на вход значение. Вызовите foo со входящим значением 2. Каков результат выполнения функции bar? Каков результат выполнения функции foo? Какие параметры у функции foo? Какие параметры у функции bar?

function foo(a) {
    function bar(b) {return b * 2;}
    return a * 3;
}
foo(2); // результат 6
// bar лишь определен внутри функции foo, но не работает, так не был вызван
// параметры foo - a, bar - b


// 214. Объявите функцию foo со входящим параметром a. Внутри неё объявите функцию bar со входящим параметром b. Функция bar должна удваивать поданное ей на вход значение. Функция foo должна суммировать поданное ей на вход значение с результатом выполнения функции bar, которой на вход передано значение 3. Вызовите foo со входящим значением 4. Каков результат выполнения функции bar? Каков результат выполнения функции foo?

function foo(a) {
    function bar(b) {
        return b * 2;
    }
    return a + bar(3);
}

foo(4); // результат foo - 10. bar - 6


// 216. Объявите функцию foo со входящим параметром a. Внутри неё объявите функцию bar со входящим параметром b. Функция bar должна удваивать поданное ей на вход значение. Функция foo должна суммировать поданное ей на вход значение с результатом выполнения функции bar, которой на вход передано значение, до этого переданное на вход функции foo. Вызовите foo со входящим значением 4. Каков результат выполнения функции bar? Каков результат выполнения функции foo? Какие аргументы у функции foo? Какие аргументы у функции bar?

function foo(a) {
    function bar(b) {
        return b * 2;
    }
    return 2 * bar(a)
}

foo(4);
// результат bar - 8. аргумент - 4
// результат foo - 16. аргумент - 4

// 218. Объявите функцию foo. Внутри неё объявите анонимную функцию со входящим параметром. Результатом выполнения foo должен быть результат выполнения анонимной функции. Подайте на вход анонимной функции первый аргумент функции foo. Анонимная функция должна отдавать поданное ей на вход значение без изменений. Вызовите foo со входящим значением 10. Каков результат выполнения функции foo? Какие аргументы у функции foo? Какие аргументы у анонимной функции?

function foo(a) {
    return (function (x) {return x;})(a)
}

foo(10);
// самая бредовая штука(ради штуки(штука))